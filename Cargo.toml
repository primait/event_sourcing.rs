[package]
name = "esrs"
version = "0.2.8"
authors = ["Simone Cottini <cottini.simone@gmail.com>"]
edition = "2018"
description = "A Prima.it-opinionated library to achieve cqrs/es"
license = "MIT"
repository = "https://github.com/primait/event_sourcing.rs"

[features]
blocking = []
async = ["sqlx", "tokio", "futures"]
postgresql = []

[dependencies]
# Serialization/Deserialization
serde = { version = "^1.0", features = ["derive"] }
serde_json = "^1.0"
# Uuid generation
uuid = { version = "^0.8.1", features = ["serde", "v4"] }
# Time lib
chrono = { version = "^0.4", features = ["serde"] }
# Build async trait
async-trait = "0.1.50"


# Sql library for async impl
sqlx = { version = "0.4.1", features = ["postgres", "runtime-tokio-native-tls", "uuid", "json", "chrono"], optional = true }
tokio = { version = "1.5.0", features = ["full"], optional = true }

## Future to stream over sqlx results
futures = { version = "0.3.13", optional = true }
