[package]
authors = ["Simone Cottini <cottini.simone@gmail.com>"]
categories = ["rust-patterns", "web-programming", "asynchronous", "data-structures"]
description = "A Prima.it-opinionated library to achieve cqrs/es"
edition = "2018"
keywords = ["architecture", "ddd", "event-sourcing", "cqrs", "es"]
license = "MIT OR Apache-2.0"
name = "esrs"
readme = "README.md"
repository = "https://github.com/primait/event_sourcing.rs"
rust-version = "1.58.0"
version = "0.11.0"

[package.metadata.docs.rs]
all-features = true

[workspace]
members = [
    "esrs-macros",
]

[features]
default = []
postgres = ["sqlx/postgres"]
upcasting = []

[dependencies]
# Serialization/Deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# Uuid generation
uuid = { version = "1.1", features = ["serde", "v4"] }
# Time esrs-core
chrono = { version = "0.4", features = ["serde"] }
# Build async trait
async-trait = "0.1.50"

# esrs macros
esrs-macros = { version = "0.1.0", path = "esrs-macros" }

# Used as faster alternative for read scenarios of RwLock
arc-swap = "1.5"

# Self-referential structs (for PgStoreLockGuard)
ouroboros = "0.15"

# Sql library for async impl
sqlx = { version = "0.6.1", features = ["runtime-tokio-native-tls", "uuid", "json", "chrono"], optional = true }
# To stream over sqlx results
futures = "0.3"
tracing = "0.1"

[dev-dependencies]
tokio = { version = "1.6", features = ["full"] }
thiserror = "1.0"
