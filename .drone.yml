kind: pipeline
name: default

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: ecs
    host:
      path: /etc/profile.d/ecs-credentials-endpoint

services:
- environment:
    POSTGRES_DB: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_USER: postgres
  image: public.ecr.aws/bitnami/postgresql:11
  name: postgres
- environment:
    RABBITMQ_PASSWORD: rabbit
    RABBITMQ_USERNAME: rabbit
    RABBITMQ_VHOST: rabbit
  image: public.ecr.aws/bitnami/rabbitmq:3.8
  name: rabbit
- environment:
    ZOOKEEPER_CLIENT_PORT: 2181
    ZOOKEEPER_TICK_TIME: 2000
  image: public.ecr.aws/prima/zookeeper:7.2.2
  name: zookeeper
  ports:
  - 2181
- environment:
    JMX_PORT: 9997
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://host.docker.internal:29092, PLAINTEXT://kafka:9092
    KAFKA_BROKER_ID: 1
    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
      -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9997
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  image: public.ecr.aws/prima/kafka:7.2.2
  name: kafka
  ports:
  - 9092
  - 9997
  - 29092



clone:
  disable: true

steps:
  - name: git-clone
    image: public.ecr.aws/prima/drone-git:1.3-3
    environment:
      PLUGIN_DEPTH: "5"

  - name: cache-restore
    image: public.ecr.aws/prima/drone-tools:1.22.1
    environment:
      BUCKET_NAME: "prima-ci-cache"
      CACHE_COMPRESSION_ALGO: "gz"
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
      - name: docker
        path: /var/run/docker.sock
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - cache-restore 
    depends_on:
    - git-clone
  - name: check-secrets
    image: public.ecr.aws/prima/drone-tools:1.22.1
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - check-secrets-grants
    depends_on:
    - git-clone

  - name: check-public-docker-images
    image: public.ecr.aws/prima/drone-tools:1.22.1
    commands:
      - check-public-docker-images
    depends_on:
    - git-clone



  - name: build-image
    image: public.ecr.aws/prima/drone-tools:1.22.1
    volumes:
      - name: docker
        path: /var/run/docker.sock
    commands:
      - sed -i 's/USER app/USER root/g' ./Dockerfile
      - docker build -t prima/event_sourcing.rs-ci:${DRONE_COMMIT} ./
    environment:
      DOCKER_DEFAULT_PLATFORM: linux/amd64
    depends_on:
      - cache-restore
  - name: cargo-deps
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      CARGO_HOME: /drone/src/.cargo
    commands:
      - cargo fetch
    depends_on:
      - build-image

  - name: cargo-format
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      CARGO_HOME: /drone/src/.cargo
    commands:
      - cargo make --profile drone format-ci
    depends_on:
      - cargo-deps

  - name: cargo-clippy-ci
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      CARGO_HOME: /drone/src/.cargo
      BUILD_ENV: dev
    commands:
      - cargo make --profile drone clippy-ci
    depends_on:
      - cargo-format

  - name: cargo-test
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      {"CARGO_HOME": "/drone/src/.cargo", "CARGO_HTTP_CAINFO": "", "BUILD_ENV": "dev"}
    commands:
      - cargo make --profile drone test
    depends_on:
      - cargo-clippy-ci

  - name: cargo-build
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      CARGO_HOME: /drone/src/.cargo
      BUILD_ENV: dev
    commands:
      - cargo make --profile drone build-ci
    depends_on:
      - cargo-test
    when:
      branch:
        exclude:
          - master


  - name: cache-cleanup
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    commands:
      - cargo make --profile drone cache-cleanup
    when:
      branch: master
    depends_on:
      
      - cargo-build

      - cargo-format
      - cargo-clippy-ci
      - cargo-test


  - name: cache-save
    image: public.ecr.aws/prima/drone-tools:1.22.1
    environment:
      BUCKET_NAME: "prima-ci-cache"
      CACHE_COMPRESSION_ALGO: "gz"
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
      - name: docker
        path: /var/run/docker.sock
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - cache-save .cargo
    when:
      branch: master
    depends_on:
      - cache-cleanup

trigger:
  event:
    - push


---
kind: pipeline
name: build-production


volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: ecs
    host:
      path: /etc/profile.d/ecs-credentials-endpoint

clone:
  disable: true

steps:
  - name: git-clone
    image: public.ecr.aws/prima/drone-git:1.3-3
    environment:
      PLUGIN_DEPTH: "5"

  - name: cache-restore
    image: public.ecr.aws/prima/drone-tools:1.22.1
    environment:
      BUCKET_NAME: "prima-ci-cache"
      CACHE_COMPRESSION_ALGO: "gz"
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
      - name: docker
        path: /var/run/docker.sock
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - cache-restore 
    depends_on:
    - git-clone

  - name: build-image
    image: public.ecr.aws/prima/drone-tools:1.22.1
    volumes:
      - name: docker
        path: /var/run/docker.sock
    commands:
      - sed -i 's/USER app/USER root/g' ./Dockerfile
      - docker build -t prima/event_sourcing.rs-ci:${DRONE_COMMIT} ./
    environment:
      DOCKER_DEFAULT_PLATFORM: linux/amd64
    depends_on:
      - cache-restore

  - name: build-production
    image: prima/event_sourcing.rs-ci:${DRONE_COMMIT}
    environment:
      {'CARGO_AUTH_KEY': {'from_secret': 'cargo_auth_key'}}
    volumes:
      - name: ecs
        path: /etc/profile.d/ecs-credentials-endpoint
    commands:
      - . /etc/profile.d/ecs-credentials-endpoint
      - ./deploy/build production
    depends_on:
      - build-image
      




trigger:
  {'event': 'tag', 'ref': ['refs/tags/*.*.*']}



---
kind: pipeline
name: email-failure


clone:
  disable: true

steps:
  - name: email-failure
    image: public.ecr.aws/prima/drone-email
    environment:
      PLUGIN_USERNAME:
        from_secret: email_username
      PLUGIN_PASSWORD:
        from_secret: email_password
    settings:
      host: email-smtp.eu-west-1.amazonaws.com
      from: drone@prima.it
trigger:
  status:
    - failure
  target:
    exclude:
      - qa-stack
      - qa-it
      - qa

depends_on:
- default
- build-production


